# Note the deployed model should have /info that shows the change log and version number.
# Commit your changes and push them. Then we will tag our release with the v0.0.1 release:
# git add . 
# git commit -m "created info endpoint" 
# git push 
# git tag "v0.0.1" 
# git push origin v0.0.1

name: Deploy the release version of the model(s) to staging and production.

on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:

jobs:
  build-and-push-image-to-docker-hub:
    environment: "production"
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository.
        uses: actions/checkout@v4

      - name: Get release version.
        # https://stackoverflow.com/questions/58177786/get-the-current-pushed-tag-in-github-actions
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}

      - name: Login to Docker Hub.
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx.
        uses: docker/setup-buildx-action@v3

      - name: Build and push image to Docker Hub.
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          # tags: ${{ secrets.DOCKERHUB_USERNAME }}/ml-model:latest, ${{ secrets.DOCKERHUB_USERNAME }}/ml-model:${{ github.ref }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ml-model:latest

  deploy:
    name: Release
    needs: [build-and-push-image-to-docker-hub]
    environment: "production"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Check out repository.
        uses: actions/checkout@v4
      # - name: Download model???
        # uses: actions/download-artifact@v2
        # with:
          # name: api

      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: changelog

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
      # - name: Upload Release Binary
        # uses: actions/upload-release-asset@v1
        # env:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # with: 
          # upload_url: ${{ steps.create_release.outputs.upload_url }}
          # asset_path: api
          # asset_name: api
          # asset_content_type: application/octet-stream
      - name: Print selected-environment.
        run: | 
          echo "github.ref is ${{ github.ref }}."
          echo "steps.Changelog.outputs.changelog is ${{ steps.Changelog.outputs.changelog }}."